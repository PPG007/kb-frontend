import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,g as n,f as a}from"./app-CKJ8X0K4.js";const r={};function s(l,t){return a(),i("div",null,t[0]||(t[0]=[n('<h1 id="字符串的扩展" tabindex="-1"><a class="header-anchor" href="#字符串的扩展"><span>字符串的扩展</span></a></h1><h2 id="模板字符串" tabindex="-1"><a class="header-anchor" href="#模板字符串"><span>模板字符串</span></a></h2><p>大括号中的内部就是执行 JavaScript 的代码，如果存在错误就会报错。</p><h2 id="字符串的新增方法" tabindex="-1"><a class="header-anchor" href="#字符串的新增方法"><span>字符串的新增方法</span></a></h2><ul><li>includes()、startsWith()、endsWith()： <ul><li>includes：返回布尔值，表示是否找到了参数字符串。</li><li>startsWith：返回布尔值，表示参数字符串是否在原字符串的头部。</li><li>endsWith：返回布尔值，表示参数字符串是否在原字符串的尾部。</li><li>三个方法都支持通过第二个参数指定开始搜索的位置。</li></ul></li><li>repeat()：返回一个新字符串，表示将原字符串重复指定的次数，如果是小数会取证，负数会报错。</li><li>padStart()、padEnd()：分别用于头部、尾部补全，接受两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串。</li><li>trimStart()、trimEnd()：消除字符串头部和尾部的空格，返回新字符串，不修改原始字符串。</li></ul>',5)]))}const d=e(r,[["render",s]]),c=JSON.parse('{"path":"/es6/docs/string_expansion.html","title":"字符串的扩展","lang":"zh-CN","frontmatter":{"description":"字符串的扩展 模板字符串 大括号中的内部就是执行 JavaScript 的代码，如果存在错误就会报错。 字符串的新增方法 includes()、startsWith()、endsWith()： includes：返回布尔值，表示是否找到了参数字符串。 startsWith：返回布尔值，表示参数字符串是否在原字符串的头部。 endsWith：返回布尔值，...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"字符串的扩展\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-14T12:53:24.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/kb-frontend/kb-frontend/es6/docs/string_expansion.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"字符串的扩展"}],["meta",{"property":"og:description","content":"字符串的扩展 模板字符串 大括号中的内部就是执行 JavaScript 的代码，如果存在错误就会报错。 字符串的新增方法 includes()、startsWith()、endsWith()： includes：返回布尔值，表示是否找到了参数字符串。 startsWith：返回布尔值，表示参数字符串是否在原字符串的头部。 endsWith：返回布尔值，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-14T12:53:24.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-14T12:53:24.000Z"}]]},"git":{"createdTime":1749905604000,"updatedTime":1749905604000,"contributors":[{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":0.83,"words":249},"filePathRelative":"es6/docs/string_expansion.md","autoDesc":true,"excerpt":"\\n<h2>模板字符串</h2>\\n<p>大括号中的内部就是执行 JavaScript 的代码，如果存在错误就会报错。</p>\\n<h2>字符串的新增方法</h2>\\n<ul>\\n<li>includes()、startsWith()、endsWith()：\\n<ul>\\n<li>includes：返回布尔值，表示是否找到了参数字符串。</li>\\n<li>startsWith：返回布尔值，表示参数字符串是否在原字符串的头部。</li>\\n<li>endsWith：返回布尔值，表示参数字符串是否在原字符串的尾部。</li>\\n<li>三个方法都支持通过第二个参数指定开始搜索的位置。</li>\\n</ul>\\n</li>\\n<li>repeat()：返回一个新字符串，表示将原字符串重复指定的次数，如果是小数会取证，负数会报错。</li>\\n<li>padStart()、padEnd()：分别用于头部、尾部补全，接受两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串。</li>\\n<li>trimStart()、trimEnd()：消除字符串头部和尾部的空格，返回新字符串，不修改原始字符串。</li>\\n</ul>"}');export{d as comp,c as data};
