import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,g as n,f as t}from"./app-CKJ8X0K4.js";const p={};function h(l,s){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="对象的扩展" tabindex="-1"><a class="header-anchor" href="#对象的扩展"><span>对象的扩展</span></a></h1><h2 id="super-关键字" tabindex="-1"><a class="header-anchor" href="#super-关键字"><span>super 关键字</span></a></h2><p>指向当前对象的原型对象。super 表示原型对象时，只能用在对象的方法之中，用在其他地方都会报错，而且只有对象方法的简写形式才可以。</p><h2 id="对象的扩展运算符" tabindex="-1"><a class="header-anchor" href="#对象的扩展运算符"><span>对象的扩展运算符</span></a></h2><p>解构赋值：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF;"><pre class="shiki shiki-themes one-dark-pro light-plus vp-code"><code><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#0000FF;">let</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">x</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">y</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">...</span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">z</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">}</span><span class="space"> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#000000;">=</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">{</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">x</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">y</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">2</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">a</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">3</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">,</span><span class="space"> </span><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">b</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#001080;">:</span><span class="space"> </span><span style="--shiki-dark:#D19A66;--shiki-light:#098658;">4</span><span class="space"> </span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">};</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">x</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">1</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">y</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">2</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#001080;">z</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#000000;">;</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">//</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">{</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">a:</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">3,</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">b:</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">4</span><span class="space"> </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果等号右边是 undefined 或 null 就会报错，因为它们无法转成对象，而且左侧解构赋值必须是最后一个参数。解构赋值的拷贝同样是浅拷贝。扩展运算符的解构赋值不能复制从原型对象继承的属性，但是普通的解构赋值可以</p><p>扩展运算符：对象的扩展运算符用于取出参数对象的所有可比案例属性拷贝到当前对象之中。由于数组是特殊的对象，所以对象的扩展运算符也可以用于数组。</p>`,8)]))}const r=i(p,[["render",h]]),c=JSON.parse('{"path":"/es6/docs/object_expansion.html","title":"对象的扩展","lang":"zh-CN","frontmatter":{"description":"对象的扩展 super 关键字 指向当前对象的原型对象。super 表示原型对象时，只能用在对象的方法之中，用在其他地方都会报错，而且只有对象方法的简写形式才可以。 对象的扩展运算符 解构赋值： 如果等号右边是 undefined 或 null 就会报错，因为它们无法转成对象，而且左侧解构赋值必须是最后一个参数。解构赋值的拷贝同样是浅拷贝。扩展运算符的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对象的扩展\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-14T12:53:24.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://ppg007.github.io/kb-frontend/kb-frontend/es6/docs/object_expansion.html"}],["meta",{"property":"og:site_name","content":"PPG007 的文档"}],["meta",{"property":"og:title","content":"对象的扩展"}],["meta",{"property":"og:description","content":"对象的扩展 super 关键字 指向当前对象的原型对象。super 表示原型对象时，只能用在对象的方法之中，用在其他地方都会报错，而且只有对象方法的简写形式才可以。 对象的扩展运算符 解构赋值： 如果等号右边是 undefined 或 null 就会报错，因为它们无法转成对象，而且左侧解构赋值必须是最后一个参数。解构赋值的拷贝同样是浅拷贝。扩展运算符的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-14T12:53:24.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-14T12:53:24.000Z"}]]},"git":{"createdTime":1749905604000,"updatedTime":1749905604000,"contributors":[{"name":"Koston Zhuang","username":"","email":"koston.zhuang@maiscrm.com","commits":1}]},"readingTime":{"minutes":0.86,"words":257},"filePathRelative":"es6/docs/object_expansion.md","autoDesc":true,"excerpt":"\\n<h2>super 关键字</h2>\\n<p>指向当前对象的原型对象。super 表示原型对象时，只能用在对象的方法之中，用在其他地方都会报错，而且只有对象方法的简写形式才可以。</p>\\n<h2>对象的扩展运算符</h2>\\n<p>解构赋值：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"javascript\\" style=\\"--shiki-dark:#abb2bf;--shiki-light:#000000;--shiki-dark-bg:#282c34;--shiki-light-bg:#FFFFFF\\"><pre class=\\"shiki shiki-themes one-dark-pro light-plus vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-dark:#C678DD;--shiki-light:#0000FF\\">let</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">{</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">x</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">y</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">...</span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">z</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">}</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#56B6C2;--shiki-light:#000000\\">=</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">{</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">x</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#001080\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#098658\\">1</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">y</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#001080\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#098658\\">2</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">a</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#001080\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#098658\\">3</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">b</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#001080\\">:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#D19A66;--shiki-light:#098658\\">4</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">};</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">x</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">1</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">y</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">2</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-dark:#E06C75;--shiki-light:#001080\\">z</span><span style=\\"--shiki-dark:#ABB2BF;--shiki-light:#000000\\">;</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">//</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">{</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">a:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">3,</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">b:</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">4</span><span class=\\"space\\"> </span><span style=\\"--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#008000;--shiki-light-font-style:inherit\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{r as comp,c as data};
